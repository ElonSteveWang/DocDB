#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

# In the v6 to v7 migration process, events which were not marked as topics in
# v6 did not have entries made in the Revision/Event correlation table. Among 
# other things, listing event groups with these events in them may not return
# the list of documents you expect. Since there is no way to make this 
# association in a completely correct way (there was nothing in the document 
# information to relate to an event, only for an event to relate to a document)
# this correlation was not attempted by the MigrateV7 script.

# This script is an attempt to do something close to the right thing.

# Events with no documents (now) associated with them will be searched. Document 
# numbers from those events will determined and the latest version of those 
# documents will be flagged as being from this event.

# Must run in a v7 environment

use DBI;
use Getopt::Long;

#require "CGIInclude.pm";

require "DocDBGlobals.pm";
require "MeetingSQL.pm";
require "DocumentSQL.pm";
require "TalkSQL.pm";
require "DBUtilities.pm";

CreateConnection(-type => "ro");
GetConferences();

my $List = $dbh -> prepare("select COUNT(DocumentRevision.DocumentID) from ".
           "DocumentRevision,RevisionEvent where DocumentRevision.DocRevID=RevisionEvent.DocRevID ".
           "and DocumentRevision.Obsolete=0 and RevisionEvent.ConferenceID=?");            
foreach my $EventID (keys %Conferences) {
 
  $List -> execute($EventID);
  my ($NDocuments) = $List -> fetchrow_array;
  unless ($NDocuments) {
    my @SessionTalkIDs = FetchSessionTalksByConferenceID($EventID);
    unless (@SessionTalkIDs) {
      my $EventGroupID = $Conferences{$EventID}{EventGroupID};
      FetchEventGroup($EventGroupID);
      print $EventGroups{$EventGroupID}{ShortDescription},":",$Conferences{$EventID}{Title}," will be updated\n";
    }
    foreach my $SessionTalkID (@SessionTalkIDs) {
      my $DocumentID = $SessionTalks{$SessionTalkID}{DocumentID};
      FetchDocument($DocumentID);
      print "  Document $DocumentID, version $Documents{$DocumentID}{NVersions} will be updated\n";
    }
  }
}    

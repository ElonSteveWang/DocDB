#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

# Some groups have used a "meeting" in v6 parlance as a container for series
# of repeating meetings (say once a week). While this sort of worked in v6, this 
# won't work well in v7 (and v7 is much better with handling lots of short
# events than v6 was). So, it is strongly suggested that these series of meetings
# be broken into events. This script does that, just change @BreakEventIDs below

# Usage: BreakMeetings --u=username --p=password 

# Must run in a v7 environment


@BreakEventIDs = (22,17,15,11,10); # These are the Event or Conference ID's
                                   # of the events you want to break up. Each
                                   # event is made into an event group and each
                                   # session is made into a corresponding event 

use DBI;
use Getopt::Long;

#require "CGIInclude.pm";

require "DocDBGlobals.pm";
require "MeetingSQL.pm";

&GetOptions("u=s" => \$User,"p=s" => \$Password);

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$User,$Password);
&GetConferences;

foreach my $EventID (@BreakEventIDs) {
  my $URL             = $Conferences{$EventID}{URL}            ;
  my $Title           = $Conferences{$EventID}{Title}          ;
  my $LongDescription = $Conferences{$EventID}{LongDescription};
  
  print "Breaking up $Title\n";

  my $Insert = $dbh -> prepare("insert into EventGroup (ShortDescription,LongDescription) values (?,?)"); 
  $Insert -> execute($Title,$LongDescription);
  my $EventGroupID = $Insert -> {mysql_insertid};

  my @SessionIDs = &FetchSessionsByConferenceID($EventID);
  
  foreach my $SessionID (@SessionIDs) {
    my $StartTime    = $Sessions{$SessionID}{StartTime}  ;
    my $Location     = $Sessions{$SessionID}{Location}   ;
    my $Title        = $Sessions{$SessionID}{Title}      ;
    my $Description  = $Sessions{$SessionID}{Description};
    my ($StartDate) = split /\s+/,$StartTime;
    print "  Turning $Title into a separate event.\n"; 
    my $NewEventID = &InsertEvent(-eventgroupid => $EventGroupID, -shortdescription => $Title,
                   -longdescription => $Title, -startdate => $StartDate, -enddate => $StartDate, 
                   -location => $Location, -url => $URL, -showalltalks => 1); 
    my $Update = $dbh -> prepare("update Session set ConferenceID=? where SessionID=?");
    $Update -> execute($NewEventID,$SessionID);
  }
}    

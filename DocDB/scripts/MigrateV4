#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

# Usage: MigrateV4 --u=username --p=password --a=init|migrate|delete


# Copyright 2001-2006 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

use DBI;
use Getopt::Long;

require "CGIInclude.pm";

require "DocDBGlobals.pm";

&GetOptions("a=s" => \$Action,"u=s" => \$User,"p=s" => \$Password);

unless ($Action eq "init" or $Action eq "delete" or $Action eq "migrate") {
  print "Usage: MigrateV4 --u=username --p=password --a=init|migrate|delete\n\n";
  print "This script is used to migrate from a version 3 to version 4 DB structure. \n";
  print "It adds the several fields to the Conference table and new tables for \n";
  print "organizing meetings and a planned keyword enhancement. \n\n";
  print "Run this script in \"init\" mode.  \n\n";
  print "At this point you can update the CGI code. Running it in the migrate or delete modes is not needed.  \n";
#  print "Run this script in \"init\" mode first, then in \"migrate\" mode.  \n\n";
#  print "At this point you can update the CGI code and when you are comfortable  \n";
#  print "everything is OK, run in \"delete\" mode to erase old columns and/or tables.  \n";
 exit;
}  

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$User,$Password);

if ($Action eq "init") { # Modify existing tables and add new tables in preparation for migration 

### Edit the first line if you have a different admin account

# Meeting expansion

  my $ConferenceAdd  = $dbh -> prepare("alter table Conference add Preamble text"); 
  my $ConferenceAdd2 = $dbh -> prepare("alter table Conference add Title varchar(128)"); 
  my $ConferenceAdd3 = $dbh -> prepare("alter table Conference add Epilogue text"); 
  my $ConferenceAdd4 = $dbh -> prepare("alter table Conference add ShowAllTalks Integer"); 
  my $ConferenceUpd  = $dbh -> prepare("alter table Conference modify URL varchar(240)"); 
  my $JournalUpd     = $dbh -> prepare("alter table Journal    modify URL varchar(240)"); 

  my $SessSepCreate = $dbh -> prepare("create table SessionSeparator ".
                   "(SessionSeparatorID integer auto_increment primary key,".
                   " ConferenceID integer, StartTime datetime,".
                   " Location varchar(128), Title varchar(128),".
                   " Description text, TimeStamp timestamp,".
                   " index(ConferenceID))"); 
  
  my $MeetOrdCreate = $dbh -> prepare("create table MeetingOrder ".
                   "(MeetingOrderID integer auto_increment primary key,".
                   " SessionOrder integer, SessionID integer,".
                   " SessionSeparatorID integer, TimeStamp timestamp,".
                   " index(SessionID), index(SessionSeparatorID))"); 
                   
  my $SessionCreate = $dbh -> prepare("create table Session ".
                   "(SessionID integer auto_increment primary key,".
                   " ConferenceID integer, StartTime datetime,".
                   " Location varchar(128), Title varchar(128),".
                   " Description text, TimeStamp timestamp,".
                   " index(ConferenceID))"); 

  my $SessOrdCreate = $dbh -> prepare("create table SessionOrder ".
                   "(SessionOrderID integer auto_increment primary key,".
                   " TalkOrder integer, SessionTalkID integer,".
                   " TalkSeparatorID integer, TimeStamp timestamp,".
                   " index(SessionTalkID), index(TalkSeparatorID))"); 
                   
  my $TalkSepCreate = $dbh -> prepare("create table TalkSeparator ".
                   "(TalkSeparatorID integer auto_increment primary key,".
                   " SessionID integer, Time time, Title varchar(128),".
                   " Note text, TimeStamp timestamp,".
                   " index(SessionID))"); 
  
  my $SessTalkCreate = $dbh -> prepare("create table SessionTalk ".
                   "(SessionTalkID integer auto_increment primary key,".
                   " SessionID integer, DocumentID integer, Confirmed integer,".
                   " Time time, HintTitle varchar(128),".
                   " Note text, TimeStamp timestamp,".
                   " index(SessionID),index(DocumentID))"); 

  my $AuthorHintCreate = $dbh -> prepare("create table AuthorHint ".
                   "(AuthorHintID integer auto_increment primary key,".
                   " SessionTalkID integer, AuthorID integer, TimeStamp timestamp,".
                   " index(SessionTalkID))"); 
  
  my $TopicHintCreate = $dbh -> prepare("create table TopicHint ".
                   "(TopicHintID integer auto_increment primary key,".
                   " SessionTalkID integer, MinorTopicID integer, TimeStamp timestamp,".
                   " index(SessionTalkID))"); 
  
  my $MeetSecurityCreate = $dbh -> prepare("create table MeetingSecurity ".
                   "(MeetingSecurityID integer auto_increment primary key,".
                   " ConferenceID integer, GroupID integer, TimeStamp timestamp,".
                   " index(ConferenceID))"); 
  
  my $MeetModifyCreate = $dbh -> prepare("create table MeetingModify ".
                   "(MeetingModifyID integer auto_increment primary key,".
                   " ConferenceID integer, GroupID integer, TimeStamp timestamp,".
                   " index(ConferenceID))"); 
  
  # Planned keyword expansion
  
  my $KeywordGroupCreate = $dbh -> prepare("create table KeywordGroup ".
                   "(KeywordGroupID integer auto_increment primary key,".
                   " ShortDescription varchar(32), LongDescription text, TimeStamp timestamp)"); 
  
  my $KeywordCreate = $dbh -> prepare("create table Keyword ".
                   "(KeywordID integer auto_increment primary key,".
                   " KeywordGroupID integer,". 
                   " ShortDescription varchar(32), LongDescription text, TimeStamp timestamp,". 
                   " index(KeywordGroupID))"); 
  
  my $KeywordGroupingCreate = $dbh -> prepare("create table KeywordGrouping ".
                   "(KeywordGroupingID integer auto_increment primary key,".
                   " KeywordGroupID integer, KeywordID integer, TimeStamp timestamp,".
                   " index(KeywordID), index(KeywordGroupID))"); 
  
  $ConferenceAdd         -> execute();
  $ConferenceAdd2        -> execute();
  $ConferenceAdd3        -> execute();
  $ConferenceAdd4        -> execute();
  $ConferenceUpd         -> execute();
  $JournalUpd            -> execute();
  $SessSepCreate         -> execute();
  $MeetOrdCreate         -> execute();
  $SessionCreate         -> execute();
  $SessOrdCreate         -> execute();
  $TalkSepCreate         -> execute();
  $SessTalkCreate        -> execute();
  $AuthorHintCreate      -> execute();
  $TopicHintCreate       -> execute();
  $MeetSecurityCreate    -> execute();
  $MeetModifyCreate      -> execute();
  $KeywordGroupCreate    -> execute();
  $KeywordCreate         -> execute();
  $KeywordGroupingCreate -> execute();
}

if ($Action eq "migrate") {
  print "No migration necessary.\n";
}

if ($Action eq "delete") { 
  print "No deletions necessary.\n";
}

exit;

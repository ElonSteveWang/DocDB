#! /usr/bin/env perl
#
#        Name: ShowTalkNote
# Description: Usually called as a pop-up, this will look up the note for a talk
#              and display it since it could get crowded in the normal table.
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: 

# Copyright 2001-2005 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# FIXME: XHTML

use CGI;                                                                                      
use DBI;

require "DocDBGlobals.pm";
require "Messages.pm";

require "ResponseElements.pm";
require "Security.pm";
require "MeetingSecurityUtilities.pm";
require "HTMLUtilities.pm";

require "DocumentSQL.pm";
require "RevisionSQL.pm";
require "TalkSQL.pm";
require "MeetingSQL.pm";
require "TalkHintSQL.pm";
require "TalkHintUtilities.pm";

require "DocumentHTML.pm";

$query = new CGI;  
%params = $query -> Vars;

my $SessionTalkID = $params{sessiontalkid};   # Extract term user wants help for

$dbh   = DBI -> connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

unless ($dbh) {
  push @ErrorStack,$Msg_NoConnect;
}         
EndPage();

# Collect info

&FetchSessionTalkByID($SessionTalkID);
my $SessionID  = $SessionTalks{$SessionTalkID}{SessionID};
my $DocumentID = $SessionTalks{$SessionTalkID}{DocumentID};
my $Confirmed  = $SessionTalks{$SessionTalkID}{Confirmed} ;
my $Time       = $SessionTalks{$SessionTalkID}{Time}      ;
my $HintTitle  = $SessionTalks{$SessionTalkID}{HintTitle} ;
my $Note       = $SessionTalks{$SessionTalkID}{Note}      ;

&FetchSessionByID($SessionID);
my $ConferenceID = $Sessions{$SessionID}{ConferenceID};
unless (&CanAccessMeeting($ConferenceID)) {
  push @ErrorStack,$Msg_MeetNoAccess;
}
EndPage();

my $DocRevID;
if ($DocumentID) {
  &FetchDocument($DocumentID);
  $DocRevID = &FetchRevisionByDocumentAndVersion($DocumentID,$Documents{$DocumentID}{NVersions});
}

my $BestTitle;
if ($Confirmed && $DocumentID) {
  $BestTitle = $DocRevisions{$DocRevID}{Title};
} else {
  $BestTitle = $SessionTalks{$SessionTalkID}{HintTitle};    
}
 
# Start page

print $query->header;
&DocDBHeader("Notes for $BestTitle","",-nobody => $TRUE);

# Print out info

if ($SessionID) {
  my @TopicHintIDs  = &FetchTopicHintsBySessionTalkID($SessionTalkID);
  my @AuthorHintIDs = &FetchAuthorHintsBySessionTalkID($SessionTalkID);

  my @TopicIDs  = ();
  my @AuthorIDs = ();
   
  foreach my $TopicHintID (@TopicHintIDs) {
    my $TopicID = $TopicHints{$TopicHintID}{MinorTopicID};
    push @TopicIDs,$TopicID;
  } 

  foreach my $AuthorHintID (@AuthorHintIDs) {
    my $AuthorID = $AuthorHints{$AuthorHintID}{AuthorID};
    push @AuthorIDs,$AuthorID;
  } 

  print "<b><big>Notes for $BestTitle</big></b><p>\n";
  print "<b>This talk was entered with the following information:</b><p/>\n";
  print "<table>\n";
  print "<tr><th align=right valign=top>Suggested Title:</th><td>$SessionTalks{$SessionTalkID}{HintTitle}</td></tr>\n";
  print "<tr><th align=right valign=top>Notes:</th><td>$Note</td></tr>\n";
  print "<tr><th align=right valign=top>Authors:</th><td>\n";
   &ShortAuthorListByID(@AuthorIDs);
   print "</td></tr>\n";
  print "<tr><th align=right valign=top>Topics:</th><td>\n";
   ShortTopicListByID(@TopicIDs);
   print "</td></tr>\n";
  print "</table><p/>\n";
  if ($DocumentID) {
    if ($Confirmed) {
      print "<b>This talk is a confirmed match with this document:</b>\n";
    } else {
      print "<b>This talk has been matched (but not confirmed) with this document:</b>\n";
    } 
    print "<p/>\n";
    my @DocumentIDs = ($DocumentID);
    my %FieldList = PrepareFieldList(-fields => ["Title","Author","Topics","Files"]);
    DocumentTable(-fieldlist => \%FieldList, -docids  => \@DocumentIDs);
  } else {
    print "<b>No document in the database has been matched to this talk.</b>\n"
  }
} else {
  print "<b><big>No notes for this talk</big></b><p>\n";
}  

if (CanModifyMeeting($ConferenceID)) {
  my $SearchDays  = $TalkHintWindow;

  my %CheckDocumentIDs = GetHintDocuments($SessionID,$SearchDays);
  my @MatchedDocIDs    = TalkMatches($SessionTalkID,0,%CheckDocumentIDs);
  if (@MatchedDocIDs) {
    print "<p/><b>The following documents are possible matches for this talk (best
    first):<p/>\n";
    my %FieldList = PrepareFieldList(-fields => ["Title","Author","Topics","Confirm"]);
    DocumentTable(-fieldlist => \%FieldList, -docids  => \@MatchedDocIDs, -talkid => $SessionTalkID);
  }  
}

DocDBFooter($DBWebMasterEmail,$DBWebMasterName,-nobody => $TRUE);

#! /usr/bin/env perl
#
#        Name: ShowTalkNote
# Description: Usually called as a pop-up, this will look up the note for a talk
#              and display it since it could get crowded in the normal table.
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: 

# Copyright 2001-2005 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# FIXME: XHTML

use CGI;                                                                                      
use DBI;

require "DocDBGlobals.pm";
require "Messages.pm";

require "ResponseElements.pm";
require "Security.pm";
require "MeetingSecurityUtilities.pm";
require "HTMLUtilities.pm";

require "DocumentSQL.pm";
require "RevisionSQL.pm";
require "TalkSQL.pm";
require "MeetingSQL.pm";
require "TalkHintSQL.pm";
require "TalkHintUtilities.pm";

require "DocumentHTML.pm";
require "TalkHTML.pm";

$query = new CGI;  
%params = $query -> Vars;

my $SessionOrderID = $params{sessionorderid};

$dbh   = DBI -> connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

unless ($dbh) {
  push @ErrorStack,$Msg_NoConnect;
}         
EndPage();

# Collect info
my ($SessionTalkID,$TalkSeparatorID,$SessionID);
 
FetchSessionOrderByID($SessionOrderID);

if ($SessionOrders{$SessionOrderID}{SessionTalkID}) {
  $SessionTalkID     = $SessionOrders{$SessionOrderID}{SessionTalkID};
  FetchSessionTalkByID($SessionTalkID);
  $TalkDefaultConfirmed = $SessionTalks{$SessionTalkID}{Confirmed}  || "";
  $TalkDefaultTime      = $SessionTalks{$SessionTalkID}{Time}       || "00:30";
  $TalkDefaultTitle     = $SessionTalks{$SessionTalkID}{HintTitle}  || "";
  $TalkDefaultNote      = $SessionTalks{$SessionTalkID}{Note}       || "";
  $TalkDefaultDocID     = $SessionTalks{$SessionTalkID}{DocumentID} || "";
  $SessionID            = $SessionTalks{$SessionTalkID}{SessionID};
  # Get hints and convert to format accepted by scrolling lists
  
  my @TopicHintIDs = &FetchTopicHintsBySessionTalkID($SessionTalkID);
  foreach my $TopicHintID (@TopicHintIDs) {
    push @TalkDefaultTopicHints,$TopicHints{$TopicHintID}{MinorTopicID};
  }
  my @AuthorHintIDs = &FetchAuthorHintsBySessionTalkID($SessionTalkID);
  foreach my $AuthorHintID (@AuthorHintIDs) {
    push @TalkDefaultAuthorHints,$AuthorHints{$AuthorHintID}{AuthorID};
  }
} elsif ($SessionOrders{$SessionOrderID}{TalkSeparatorID}) {
  $TalkSeparatorID   = $SessionOrders{$SessionOrderID}{TalkSeparatorID};
  FetchTalkSeparatorByID($TalkSeparatorID);
  
  $TalkDefaultConfirmed = "";
  $TalkDefaultTime      = $TalkSeparators{$TalkSeparatorID}{Time}  || "00:30";
  $TalkDefaultTitle     = $TalkSeparators{$TalkSeparatorID}{Title} || "";
  $TalkDefaultNote      = $TalkSeparators{$TalkSeparatorID}{Note}  || "";
  $SessionID            = $TalkSeparators{$TalkSeparatorID}{SessionID};
}


#my $SessionTalkID = $SessionOrders{$SessionOrderID}{SessionTalkID}
#FetchSessionTalkByID($SessionTalkID);
#my $SessionID  = $SessionTalks{$SessionTalkID}{SessionID};
#my $DocumentID = $SessionTalks{$SessionTalkID}{DocumentID};
#my $Confirmed  = $SessionTalks{$SessionTalkID}{Confirmed} ;
#my $Time       = $SessionTalks{$SessionTalkID}{Time}      ;
#my $HintTitle  = $SessionTalks{$SessionTalkID}{HintTitle} ;
#my $Note       = $SessionTalks{$SessionTalkID}{Note}      ;

FetchSessionByID($SessionID);
my $EventID = $Sessions{$SessionID}{ConferenceID};

unless (CanAccessMeeting($EventID)) {
  push @ErrorStack,$Msg_MeetNoAccess;
}

EndPage();

my $DocRevID;
if ($DocumentID) {
  &FetchDocument($DocumentID);
  $DocRevID = &FetchRevisionByDocumentAndVersion($DocumentID,$Documents{$DocumentID}{NVersions});
}

my $BestTitle;
if ($Confirmed && $DocumentID) {
  $BestTitle = $DocRevisions{$DocRevID}{Title};
} else {
  $BestTitle = $SessionTalks{$SessionTalkID}{HintTitle};    
}
 
# Start page

print $query->header;
&DocDBHeader("Notes for $BestTitle","",-nobody => $TRUE);

 
### Form to change Agenda Info 
 
print "<table>\n";
print "<tr>\n";

print "<td>\n"; 
$query -> param('sessionorderid',$SessionOrderID);
print $query -> hidden(-name => 'sessionorderid', -default => $SessionOrderID);
print $query -> hidden(-name => 'timestamp',      -default => $EntryTimeStamp);
TalkConfirm($SessionOrderID);    
print "</td>\n";

print "<td>\n"; TalkDocID($SessionOrderID);     print "</td>\n";
print "<td>\n"; TalkTitle($TalkDefaultTitle);   print "</td>\n";
print "<td>\n"; TalkTimePullDown();             print "</td>\n";
print "<td>\n"; TalkAuthors($SessionOrderID);   print "</td>\n";
print "<td>\n"; TalkTopics($SessionOrderID);    print "</td>\n";
print "</tr>\n";
print "<tr>\n";
print "<td>\n"; TalkNote(); print "</td>\n";
print "</tr>\n";
print "</table>\n";

if ($DocumentID) {
  if ($Confirmed) {
    print "<b>This talk is a confirmed match with this document:</b>\n";
  } else {
    print "<b>This talk has been matched (but not confirmed) with this document:</b>\n";
  } 
  print "<p/>\n";
  my @DocumentIDs = ($DocumentID);
  my %FieldList = PrepareFieldList(-fields => ["Title","Author","Topics","Files"]);
  DocumentTable(-fieldlist => \%FieldList, -docids  => \@DocumentIDs);
} else {
  print "<b>No document in the database has been matched to this talk.</b>\n"
}

if (CanModifyMeeting($ConferenceID)) {
  my $SearchDays  = $TalkHintWindow;

  my %CheckDocumentIDs = GetHintDocuments($SessionID,$SearchDays);
  my @MatchedDocIDs    = TalkMatches($SessionTalkID,0,%CheckDocumentIDs);
  if (@MatchedDocIDs) {
    print "<p/><b>The following documents are possible matches for this talk (best
    first):<p/>\n";
    my %FieldList = PrepareFieldList(-fields => ["Title","Author","Topics","Confirm"]);
    DocumentTable(-fieldlist => \%FieldList, -docids  => \@MatchedDocIDs, -talkid => $SessionTalkID);
  }  
}

DocDBFooter($DBWebMasterEmail,$DBWebMasterName,-nobody => $TRUE);

#! /usr/bin/env perl
#
#        Name: EmailAdministerForm
# Description: This script provides a form to administer users receiving
#              e-mail notifications and shows the complete list of who is
#              receiving what.
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: 
#

use CGI;                                                                                      
use DBI;

require "DocDBGlobals.pm";
require "Scripts.pm";
require "Security.pm";
require "HTMLUtilities.pm";
require "AdministerElements.pm";

require "MailNotification.pm";
require "SecuritySQL.pm";
require "NotificationSQL.pm";

$query = new CGI;  # Global for subroutines
$dbh   = DBI -> connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

&GetSecurityGroups;

print $query->header;
&DocDBHeader("E-mail Administration"); 

&HelpPopupScript;

@ErrorStack = ();
@WarnStack  = ();

unless (&CanAdminister()) {
  push @ErrorStack,"You are not allowed to access administrative functions.";
}

if (@ErrorStack) {  # The user made one or more mistakes, warn and exit
  &EndPage(@ErrorStack);
}

print "<b>This form allows you to administer email users.</b><p>\n"; 

print "Since users can modify their own data and create their own accounts,
       the only functions you can perform here are to reset the user's password
       and delete a user. The full list of users receiving notifications and 
       their preferences are shown below for your reference.<p>\n";

### Email User Modification

print $query -> start_multipart_form('POST',"$EmailAdminister");
print "<table cellpadding=10>\n";
print "<tr valign=top>\n";
print "<td colspan=2>\n"; &AdministerActions;      print "</td>\n";
print "</tr>\n";

print "<tr valign=top>\n";
print "<td>\n"; &EmailUserSelect; print "</td>\n";  
print "<td>\n";   
print "<b><a ";
&HelpLink("resetpassword");
print "New Password:</a></b><br> \n";
print $query -> textfield (-name => 'resetpw', -size => 20, -maxlength => 20);
print "</td>\n";
print "</tr>\n";

print "<tr valign=top>\n";
print "<td colspan=3>\n";
&AdministratorPassword;
print "&nbsp;";
print $query -> submit (-value => "Modify E-mail User");
print "</td>\n";
print "</tr>\n";

print "</table>\n";
print $query -> end_multipart_form;

print "<p>\n";
print "<b>The users who receive e-mail and when are shown below:</b><p>\n";
print "<p><hr>\n";

### Display of existing groups

my @EmailUserIDs = &GetEmailUserIDs;

print "<table cellpadding=3>\n";
foreach my $EmailUserID (@EmailUserIDs) {
  &FetchEmailUser($EmailUserID);  
  print "<tr valign=top>\n";
  print "<td>\n";

  print "<table>\n";
  print "<tr>\n";
  print "<th>Username:</th><td>$EmailUser{$EmailUserID}{Username}<br>\n"; 
  print "</td>\n";
  print "</tr>\n";
  print "<tr>\n";
  print "<th>Name:</th><td>$EmailUser{$EmailUserID}{Name}<br>\n"; 
  print "</td>\n";
  print "</tr>\n";
  print "<tr valign=top>\n";
  print "<th>E-mail:</th><td>$EmailUser{$EmailUserID}{EmailAddress}<br>\n"; 
  print "</td>\n";
  print "</tr>\n";
  print "<tr valign=top>\n";
  print "<th>HTML:</th>";
  print "<td>".("Yes","No")[$EmailUser{$EmailUserID}{PreferHTML}]."<br>\n"; 
  print "</td>\n";
  print "</tr>\n";
  print "</table>\n";
  print "</td>\n";

  print "<td>\n";
  &DisplayNotification($EmailUserID,"Immediate");
  print "</td>\n";

  print "<td>\n";
  &DisplayNotification($EmailUserID,"Daily");
  print "</td>\n";

  print "<td>\n";
  &DisplayNotification($EmailUserID,"Weekly");
  print "</td>\n"; 

  print "</tr>\n";
  print "<tr><td colspan=5><hr width=\"95%\"></td></tr>\n";
} 
print "</table>\n";

print "<p><hr><p>\n";

&DocDBNavBar();
&DocDBFooter($DBWebMasterEmail,$DBWebMasterName);

#! /usr/bin/env perl
#
# Description: Allows an administrator to create entries for certificate users in EmailUser
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified:

# Copyright 2001-2007 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

use CGI qw(-nosticky);
use CGI::Untaint;
use DBI;

require "DocDBGlobals.pm";
require "AdministerElements.pm";
require "ResponseElements.pm";
require "Scripts.pm";
require "Security.pm";
require "Messages.pm";

require "DBUtilities.pm";
require "DBColumnSizes.pm";
require "HTMLUtilities.pm";

require "SecuritySQL.pm";
require "SecurityHTML.pm";

$query = new CGI;  # Global for subroutines

# Parameters to script

my $Untaint = CGI::Untaint -> new($query -> Vars);

my $Password      = $Untaint -> extract (-as_printable => "password")    || "";
my $Username      = $Untaint -> extract (-as_printable => "admuser")     || "";
my $Action        = $Untaint -> extract (-as_printable => "admaction")   || "";
my $Force         = $Untaint -> extract (-as_printable => "admforce")    || "";

#my $TopicID       = $Untaint -> extract (-as_integer   => "topics")      || 0;
#my $ParentTopicID = $Untaint -> extract (-as_integer   => "parenttopic") || 0;
#my $LongName      = $Untaint -> extract (-as_printable => "longdesc")    || "";
#my $ShortName     = $Untaint -> extract (-as_printable => "shortdesc")   || "";

my $MaxUsers = 12;

$query -> delete_all();

# Open connection and die if we can't

if ($Action && (!$Password || !$Username)) {
  push @ErrorStack,$Msg_AdminNoPass;
}
EndPage(-startpage => $TRUE);

if ($Action || $Password || $Username) {
  CreateConnection(-user => $Username, -password => $Password);
} else {
  CreateConnection(-type => "ro");
}
EndPage(-startpage => $TRUE);

print $query -> header( -charset => $HTTP_ENCODING );
DocDBHeader("Bulk User Insert","",-scripts => ["PopUps"]);

unless (CanAdminister()) {
  push @ErrorStack,$Msg_AdminNoLogin;
}
EndPage();

if ($Action eq "Insert") {
  # Do our thing here
}

if (@ActionStack) {
  ActionReport();
}

EndPage();

print '<h4>';
print 'Use this form to add several users at once into the same group(s) and with the same permissions. This eliminates
       the need for the users to apply for access separately.';
print "</h4>\n";

print $query -> start_multipart_form('POST',$BulkCertificateInsert,'id="bulkinsert" name="bulkinsert"');

print "<table class=\"MedPaddedTable CenteredTable\">\n";

print "<tr>\n";
print '<td rowspan="2">';
SecurityScroll(-name => 'group', -helplink  => 'usergroups', -helptext => "Users' Groups");
print "</td>\n";
print '<td colspan="2">';
if ($UseSignoffs) {
  print $query -> checkbox(-name  => "CanSign", -value    => 'CanSign',
                           -label => 'May sign documents');
} else {
  print '&nbsp;';
}
print "</td>\n";
print "</tr><tr>\n";
print '<td colspan="2">';
AdministratorPassword();
print "</td>\n";
print "</tr>\n";

print "<tr><th>Certificate CN</th><th>Name</th><th>E-mail Address</th></tr>";

foreach my $Row (1..$MaxUsers) {
  print "<tr>\n";
  print "<td>\n";
  TextField(-name => "cn$Row", -size => 40, -maxlength => $DBColumnSize{EmailUser}{Username});
  print "</td>\n";
  print "<td>\n";
  TextField(-name => "name$Row", -size => 40, -maxlength => $DBColumnSize{EmailUser}{Name});
  print "</td>\n";
  print "<td>\n";
  TextField(-name => "email$Row", -size => 30, -maxlength => $DBColumnSize{EmailUser}{EmailAddress});
  print "</td>\n";
  print "</tr>\n";
}

print '<td colspan="3" class="SubmitCell">';
print $query -> submit (-value => "Insert Users");
print "</td>\n";

print "</table>\n";
print $query -> end_multipart_form;

DocDBNavBar();
DocDBFooter($DBWebMasterEmail,$DBWebMasterName);

exit;

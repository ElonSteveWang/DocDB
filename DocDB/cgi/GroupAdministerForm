#! /usr/bin/env perl
#
# Description: This script provides a form to administer groups in 
#              the DocDB and shows the relationships between groups.
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: 

# Copyright 2001-2004 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

use CGI;                                                                                      
use DBI;

require "DocDBGlobals.pm";
require "AdministerElements.pm";
require "FormElements.pm";
require "Scripts.pm";
require "Security.pm";
require "SecuritySQL.pm";
require "SecurityHTML.pm";

require "GroupHTML.pm";
require "HTMLUtilities.pm";
require "Sorts.pm";

$query = new CGI;  # Global for subroutines
$dbh   = DBI -> connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

&GetSecurityGroups;

print $query->header;
&DocDBHeader("Group Administration"); 

&HelpPopupScript;

@ErrorStack = ();
@WarnStack  = ();

unless (&CanAdminister()) {
  push @ErrorStack,"You are not allowed to access administrative functions.";
}

if (@ErrorStack) {  # The user made one or more mistakes, warn and exit
  &EndPage(@ErrorStack);
}

print "<b><a ";
&HelpLink("grouptutorial");
print "Help on groups</a></b><p>\n";

print "Begin by selecting an action (Modify/New/Delete). If you select
       <b>New</b>, any selection from the first list will be ignored, but you
       must fill in the group name, description, and any permissions  you want
       to grant. If you select <b>Modify</b> you must make a selection from
       the first list and any attributes you select on the right will be
       changed. If you leave something blank, it will not be changed. If you
       select <b>Delete</b> any selections other than from  the first list
       will be ignored.<p>\n";

print "Note that deleting and then re-entering with the same information is
       not the same as modifying. Everything in the DB is tied together with
       invisible ID numbers. <b>Be very careful about deleting groups;</b> you
       may end up with documents not accessible to anyone.<p>\n";

### Group Modification

my %EnableMatrix = ();

$EnableMatrix{parent}{Delete}      = 1;

$EnableMatrix{parent}{Modify}      = 1;
$EnableMatrix{child}{Modify}       = 1;
$EnableMatrix{name}{Modify}        = 1;
$EnableMatrix{description}{Modify} = 1;
$EnableMatrix{remove}{Modify}      = 1;
$EnableMatrix{create}{Modify}      = 1;
$EnableMatrix{admin}{Modify}       = 1;

$EnableMatrix{child}{New}          = 1;
$EnableMatrix{name}{New}           = 1;
$EnableMatrix{description}{New}    = 1;
$EnableMatrix{remove}{New}         = 1;
$EnableMatrix{create}{New}         = 1;
$EnableMatrix{admin}{New}          = 1;

print $query -> start_multipart_form('POST',"$GroupAdminister",
                                     "id=\"groups\" name=\"groups\"");
print "<table cellpadding=10>\n";
print "<tr valign=top>\n";
print "<td colspan=2>\n";
 &AdministerActions(-form => "groups", -matrix => \%EnableMatrix);
print "</td>\n";
print "</tr>\n";

print "<tr valign=top>\n";
print "<td>\n"; 
&SecurityScroll(-name      => 'parent', -disabled => true, 
                -helplink  => 'parent', -helptext  => 'Group');
print "</td>\n";  
print "<td>\n"; 
&SecurityScroll(-name      => 'child', -disabled => true, -multiple => true,
                -helplink  => 'child', -helptext  => 'Subordinates');
print "</td>\n";
print "<td>\n";
 &GroupEntryBox(-disabled => true);
print "</td>\n";
print "</tr>\n";

print "<tr valign=top>\n";
print "<td colspan=3>\n";
&AdministratorPassword;
print "&nbsp;";
print $query -> submit (-value => "Change Group Info");
print "</td>\n";
print "</tr>\n";

print "</table>\n";
print $query -> end_multipart_form;

print "<p>\n";
print "<b>The current groups and the relationships between them are shown below:</b><p>\n";
print "<p><hr>\n";

### Display of existing groups

my @GroupIDs = sort numerically keys %SecurityGroups;

print "<table cellpadding=10>\n";
foreach my $GroupID (@GroupIDs) {
  print "<tr valign=top>\n";
  print "<td><b>$SecurityGroups{$GroupID}{NAME}</b><br>($SecurityGroups{$GroupID}{DESCRIPTION})</td>\n";
  print "<td>\n";
  print "<b>Dominant groups:</b>\n";
  &PrintGroupParents($GroupID);
  print "</td>\n";
  print "<td>\n";
  print "<b>Subordinate groups:</b>\n";
  &PrintGroupChildren($GroupID);
  print "</td>\n";
  print "<td>\n";
  print "<b>Permissions:</b>\n";
  &PrintGroupPermissions($GroupID);
  print "</td>\n";
  print "</tr>\n";
} 
print "</table>\n";


print "<p><hr><p>\n";

&DocDBNavBar();
&DocDBFooter($DBWebMasterEmail,$DBWebMasterName);

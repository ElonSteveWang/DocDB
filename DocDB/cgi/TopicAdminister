#! /usr/bin/env perl
#
# Description: This script is called by AdministerForm and does administration
#              on Topics in the DB. TopicAdd is simpler and can only add
#              topics. TopicAdd is most useful in setting up a new DB, while 
#              TopicAdminister will be more useful in maintaining an existing DB. 
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: 
#

use CGI;
use DBI;

require "DocDBGlobals.pm";
require "ResponseElements.pm";
require "Security.pm";
require "HTMLUtilities.pm";
require "TopicSQL.pm";
require "Messages.pm";

$query = new CGI;  # Global for subroutines

%params = $query -> Vars;

@ErrorStack = ();
@WarnStack  = ();

# Parameters to script 

my $Password      = $params{password};
my $Username      = $params{admuser};
my $Action        = $params{admaction};

my $TopicID       = $params{topics};
my $MajorTopicID  = $params{majortopic};
my $LongName      = $params{longdesc};
my $ShortName     = $params{shortdesc};

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$Username,$Password);

unless ($dbh) {
  push @ErrorStack,$Msg_AdminNoConnect;
}         

print $query->header;
&DocDBHeader("Modified List of Topics");

&EndPage(@ErrorStack);

unless (&CanAdminister) {
  push @ErrorStack,$Msg_AdminNoLogin;
}  
&EndPage(@ErrorStack);

if      ($Action eq "Delete") {
  unless ($TopicID) {
    push @ErrorStack,$Msg_ModTopicEmpty;
  }
  &EndPage(@ErrorStack);
  my $TopicLink   = &MinorTopicLink($TopicID);
  my @TopicDocIDs = &GetTopicDocuments($TopicID);
  
# Delete TopicID from Topic, Conference, RevisionTopic tables
  
  my $TopicDelete      = $dbh -> prepare("delete from MinorTopic    where MinorTopicID=?");
  my $ConferenceDelete = $dbh -> prepare("delete from Conference    where MinorTopicID=?");
  my $RevisionDelete   = $dbh -> prepare("delete from RevisionTopic where MinorTopicID=?");
  $TopicDelete      -> execute($TopicID);
  $ConferenceDelete -> execute($TopicID);
  $RevisionDelete   -> execute($TopicID);
  
  print "$TopicLink has been removed from the database.<br>\n";
  if (@TopicDocIDs) {
    push @WarnStack,"$TopicLink was a topic on some documents. These
                     entries have been removed.";
  }  
} elsif ($Action eq "Modify") {
  unless ($TopicID) {
    push @ErrorStack,$Msg_ModTopicEmpty;
  }
  &EndPage(@ErrorStack);

# Deal with name changes     

  if ($ShortName) { 
    print "<b>Updating short topic name.</b><br>\n";
    my $TopicUpdate = $dbh->prepare(
       "update MinorTopic set ShortDescription=? where MinorTopicID=?");
    $TopicUpdate -> execute($ShortName,$TopicID);
  }
  if ($LongName) { 
    print "<b>Updating long topic name.</b><br>\n";
    my $TopicUpdate = $dbh->prepare(
       "update MinorTopic set LongDescription=? where MinorTopicID=?");
    $TopicUpdate -> execute($LongName,$TopicID);
  }

# Deal with Major Topic changes   

  if ($MajorTopicID) { 
    print "<b>Updating Major Topic for Minor Topic.</b><br>\n";
    my $TopicUpdate = $dbh->prepare(
     "update MinorTopic set MajorTopicID=? where MinorTopicID=?");
    $TopicUpdate -> execute($MajorTopicID,$TopicID);
  }
} elsif ($Action eq "New") {
  if (&MajorIsGathering($MajorTopicID)) {
    push @ErrorStack,"You cannot add conferences or meetings with this form, use the 
         <a href=\"$AdministerForm\">Administration</a> form instead.";
  }       
  &EndPage(@ErrorStack);

  print "<b>Adding a new topic.</b><br>\n";
  my $TopicInsert = $dbh->prepare(
   "insert into MinorTopic ".
          "(MinorTopicID, MajorTopicID, ShortDescription, LongDescription) ". 
   "values (0,            ?,            ?,                ?)");

  $TopicInsert -> execute($MajorTopicID,$ShortName,$LongName);
  $TopicID = $TopicInsert -> {mysql_insertid}; # Works with MySQL only
} else {
  push @ErrorStack,"No valid action was specified.";
}  

# For modify or new fetch information and display.

if ($Action eq "Modify" || $Action eq "New") {
  &GetTopics;

  print "<p><b>Here are the results of your modification:<br>\n";
  my $ShortLink = &MinorTopicLink($TopicID,"short");
  my $LongLink = &MinorTopicLink($TopicID,"long");
  print "Short description: $ShortLink<br>\n";
  print "Long description: $LongLink<br>\n";
  print "</b><p>\n";
}  

print "<p>\n";

&WarnPage(@WarnStack);
&EndPage(@ErrorStack);

&DocDBNavBar;
&DocDBFooter($DBWebMasterEmail,$DBWebMasterName);
 
exit;

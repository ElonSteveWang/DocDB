#! /usr/bin/env perl
#
# Description: This script is called by AdministerForm and does administration
#              on Topics in the DB. TopicAdd is simpler and can only add
#              topics. TopicAdd is most useful in setting up a new DB, while 
#              TopicAdminister will be more useful in maintaining an existing DB. 
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: 

# Copyright 2001-2006 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA


use CGI qw(-nosticky);
use CGI::Untaint;
use DBI;

require "DocDBGlobals.pm";
require "AdministerElements.pm";
require "ResponseElements.pm";
require "Scripts.pm";
require "Security.pm";
require "Messages.pm";
require "Sorts.pm";

require "DBUtilities.pm";
require "HTMLUtilities.pm";

require "TopicHTML.pm";
require "TopicSQL.pm"; 

$query = new CGI;  # Global for subroutines

# Parameters to script 

my $Untaint = CGI::Untaint -> new($query -> Vars);

my $Password      = $Untaint -> extract (-as_printable => "password")    || "";
my $Username      = $Untaint -> extract (-as_printable => "admuser")     || "";
my $Action        = $Untaint -> extract (-as_printable => "admaction")   || "";

my $TopicID       = $Untaint -> extract (-as_integer   => "topics")      || 0;
my $ParentTopicID = $Untaint -> extract (-as_integer   => "parenttopic") || 0;
my $LongName      = $Untaint -> extract (-as_printable => "longdesc")    || "";
my $ShortName     = $Untaint -> extract (-as_printable => "shortdesc")   || "";


$query -> delete_all();

# Open connection and die if we can't

if ($Password && $Username) {
  CreateConnection(-user => $Username, -password => $Password);
} else {
  CreateConnection(-type => "ro");
}
EndPage(-startpage => $TRUE);

print $query -> header;
DocDBHeader("Topic Administration");

unless (CanAdminister()) {
  push @ErrorStack,$Msg_AdminNoLogin;
}  
EndPage();
GetTopics();

if      ($Action eq "Delete") {
  unless ($TopicID) {
    push @ErrorStack,$Msg_ModTopicEmpty;
  }
  EndPage();
  my $TopicLink     = MinorTopicLink({-topicid => $TopicID});
  my @TopicDocIDs   = GetTopicDocuments($TopicID);
  my @ChildTopicIDs = @{$TopicChildren{$TopicID}};
# Delete TopicID from Topic, Conference, RevisionTopic tables
  
  my $TopicDelete      = $dbh -> prepare("delete from MinorTopic    where MinorTopicID=?");
  my $ConferenceDelete = $dbh -> prepare("delete from Conference    where MinorTopicID=?");
  my $RevisionDelete   = $dbh -> prepare("delete from RevisionTopic where MinorTopicID=?");
#  $TopicDelete      -> execute($TopicID);
#  $ConferenceDelete -> execute($TopicID);
#  $RevisionDelete   -> execute($TopicID);
  
  print "$TopicLink has been removed from the database.<br>\n";
  if (@TopicDocIDs) {
    push @WarnStack,"$TopicLink was a topic on some documents. These
                     entries have been removed.";
  }  
} elsif ($Action eq "Modify") {
  unless ($TopicID) {
    push @ErrorStack,$Msg_ModTopicEmpty;
  }
  EndPage();

# Deal with name changes     

  if ($ShortName) { 
    print "<b>Updating short topic name.</b><br>\n";
    my $TopicUpdate = $dbh->prepare(
       "update MinorTopic set ShortDescription=? where MinorTopicID=?");
    $TopicUpdate -> execute($ShortName,$TopicID);
  }
  if ($LongName) { 
    print "<b>Updating long topic name.</b><br>\n";
    my $TopicUpdate = $dbh->prepare(
       "update MinorTopic set LongDescription=? where MinorTopicID=?");
    $TopicUpdate -> execute($LongName,$TopicID);
  }

# Deal with Major Topic changes   

  if ($MajorTopicID) { 
    print "<b>Updating Major Topic for Minor Topic.</b><br>\n";
    my $TopicUpdate = $dbh->prepare(
     "update MinorTopic set MajorTopicID=? where MinorTopicID=?");
    $TopicUpdate -> execute($MajorTopicID,$TopicID);
  }
} elsif ($Action eq "New") {
  print "<b>Adding a new topic.</b><br>\n";
  my $TopicInsert = $dbh->prepare(
   "insert into MinorTopic ".
          "(MinorTopicID, MajorTopicID, ShortDescription, LongDescription) ". 
   "values (0,            ?,            ?,                ?)");

  $TopicInsert -> execute($MajorTopicID,$ShortName,$LongName);
  $TopicID = $TopicInsert -> {mysql_insertid}; # Works with MySQL only
}  

# For modify or new fetch information and display.

if ($Action eq "Modify" || $Action eq "New") {
  GetTopics();

  print "<p><b>Here are the results of your modification:<br>\n";
  my $ShortLink = MinorTopicLink($TopicID,"short");
  my $LongLink  = MinorTopicLink($TopicID,"long");
  print "Short description: $ShortLink<br>\n";
  print "Long description: $LongLink<br>\n";
  print "</b><p>\n";
}  

if (@ActionStack) { 
  ClearTopics();
  GetTopics();
}  

EndPage();

print $query -> start_multipart_form('POST',"$TopicAdminister",
                                    "id=\"minortopic\" name=\"minortopic\"");

print "<table class=\"MedPaddedTable\">\n";
print "<tr>\n";
print "<td colspan=\"2\">\n"; 
 AdministerActions(-form => "minortopic");      
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td rowspan=\"3\">\n"; 
 TopicScroll({ -helptext   => "Topic", -helplink => "topics", 
               -itemformat => "full",  -disabled => "true",
               -extratext  => "[Long description]", 
            }); 
print "</td>\n"; 
print "<td>\n"; ShortDescriptionBox(-name => "shortdesc", -disabled => "true");     print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td>\n"; LongDescriptionBox(-name => "longdesc", -disabled => "true");     print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td>\n"; 
 AdminRegardless();
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td>\n";  
 TopicScroll({ -helptext   => "Parent Topic", -helplink => "parenttopic", 
               -itemformat => "full",         -disabled => "true",
               -name       => "parenttopic",
               -extratext  => "[Long description]", 
            }); 
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print '<td colspan="2">';
AdministratorPassword();
print "&nbsp;";
print $query -> submit (-value => "Change Topic Info");
print "</td>\n";
print "</tr>\n";

print "</table>\n";
print $query -> end_multipart_form;

DocDBNavBar();
DocDBFooter($DBWebMasterEmail,$DBWebMasterName);
 
exit;

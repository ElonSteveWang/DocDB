#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)
#

# Copyright 2001-2006 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

use CGI qw(-nosticky);                                                                                      
use DBI;

require "DocDBGlobals.pm";
require "DBUtilities.pm";
require "HTMLUtilities.pm";
require "ResponseElements.pm";
require "XSearch.pm";

require "XRefHTML.pm";
require "XRefSQL.pm";

# Build form
# do safe parse
# check into timeout with LWP::Simple

$query = new CGI;  # Global for subroutines

my %CGIParams = $query -> Vars;

my $SearchText  = $CGIParams{searchtext};
my $LocalSearch = $CGIParams{"docdb-0"};

$SearchText = "vaandering gottschalk";

CreateConnection(-type => "ro");

print $query->header;
DocDBHeader("DocDB X-Search"); 
my @ExternalDocDBIDs = GetAllExternalDocDBs();

# Figure out which projects are "on"

my @Projects = ();
foreach my $DocDBID (@ExternalDocDBIDs) {
  if ($CGIParams{"docdb-$DocDBID"}) {
    push @Projects,$ExternalDocDBs{$DocDBID}{Project};
  }
}

# Print Search Table

print '<table class="MedPaddedTable CenteredTable">';
print '<tr><td>';
print FormElementTitle(-helplink => 'xsearchtext', -helptext => "Search for");
print $query -> textfield(-name => 'searchtext', -size => 40, -maxlength => 240);
print "</td>\n";

print '<td>';
print $query -> checkbox(-name  => "docdb-0", -checked => 'checked', -label => $Link);
print "<br/>\n";
foreach my $DocDBID (@ExternalDocDBIDs) {
  my $Link = ExternalDocDBLink( {-docdbid => $DocDBID} ); 
  print $query -> checkbox(-name  => "docdb-$DocDBID", -checked => 'checked', -label => $Link);
  print "<br/>\n";
}
print '</td></tr></table>';

my %Documents = ();
if ($LocalSearch) {
  my %LocalParams = ("outformat" => "XML","simpletext" => $SearchText);
  LocalSearch( {-cgiparams => \%LocalParams} );
  %Documents = XSearchParse( {-twig => $XMLTwig} );
}

foreach my $Project (@Projects) {
  my %ProjectDocuments = XSearchParse( {-project => $Project, -text => $SearchText } );

  foreach my $Identifier (keys %ProjectDocuments) {
    $Documents{$Identifier} = $ProjectDocuments{$Identifier} ;
  }
}

# Sort by relevance

%XSearchDocs  = %Documents; # Make global for search
my @Documents = reverse sort XSearchDocsByRelevance keys %Documents;
%XSearchDocs  = (); 

# Print document table 

if (@Documents) {
  print '<table class="Alternating DocumentList">';
  print '<tr><th>Document</th><th>Title</th><th>Author(s)</th><th>Last Updated</th>';
  my $Row = 0;
  foreach my $Identifier (@Documents) {
    ++$Row;
    my $RowClass = ("Even","Odd")[$Row % 2];
    my $URL = $Documents{$Identifier}{URL};
    print "<tr class=\"$RowClass\">";
    print "<td><a href=\"$URL\">$Identifier</a></td>\n";
    print "<td><a href=\"$URL\">$Documents{$Identifier}{Title}</a></td>\n";
    
    print "<td>$Documents{$Identifier}{Author}";
    if ($Documents{$Identifier}{Author}) {
      print " <em>et. al.</em>";
    }  
    print "</td>\n";
    
    print "<td>",EuroDate($Documents{$Identifier}{Date}),"</td>\n";
    
    print "</tr>\n";
  }
  print "</table>\n";
}  

DocDBNavBar();
DocDBFooter($DBWebMasterEmail,$DBWebMasterName);
